{"version":3,"sources":["services/persons.js","index.js"],"names":["services_persons","axios","get","then","response","data","newObject","post","id","uusiNumeroObjekti","put","concat","delete","Henkilot","_ref","persons","newFilter","poistaHenkilo","henkilot","filter","henkilo","name","toLowerCase","includes","map","react_default","a","createElement","key","toString","number","src_RemoveButton","RemoveButton","_ref2","onClick","Filtteri","_ref3","kasitteleFilter","value","onChange","Lisays","_ref4","lisaaHenkilo","newName","kasitteleNimi","newNumber","kasitteleNumero","onSubmit","type","Ilmoitus","_ref5","teksti","style","color","borderSize","borderColor","borderStyle","borderRadius","backgroundColor","padding","fontSize","VirheIlmoitus","_ref6","App","useEffect","personService","henkilolista","setPersons","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setNewFilter","_useState9","_useState10","tapahtumaViesti","setTapahtumaViesti","_useState11","_useState12","virheTeksti","setVirheTeksti","src_Ilmoitus","src_VirheIlmoitus","src_Filtteri","event","target","src_Lisays","preventDefault","nimi","numero","window","confirm","etsittavaHenkilo","find","uusiNumero","setTimeout","catch","error","lisattava","src_Henkilot","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4b2232b3.chunk.js","sourcesContent":["import axios from 'axios'\r\n// tätä muutetaan sovelluksen sijainnin mukaaan\r\nconst baseUrl = '/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => {\r\n        return (\r\n            response.data\r\n        )\r\n\r\n    })\r\n}\r\n\r\nconst create = newObject => {\r\n    const request =  axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst paivitaNumero = (id, uusiNumeroObjekti) => {\r\n    const request =  axios.put(`${baseUrl}/${id}`, uusiNumeroObjekti)\r\n    return request.then(response=> response.data)\r\n}\r\n\r\nconst removePerson = (id) =>{\r\n    const request =axios\r\n        .delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response)\r\n        \r\n}\r\n\r\nexport default {\r\n    getAll: getAll,\r\n    create: create,\r\n     paivitaNumero: paivitaNumero,\r\n    removePerson:removePerson\r\n}\r\n\r\n","\nimport ReactDOM from 'react-dom';\nimport React, { useState, useEffect } from 'react'\n\nimport personService from './services/persons'\n\n\nconst Henkilot = ({ persons, newFilter, poistaHenkilo }) => {\n    let henkilot = persons.filter(henkilo => {\n        return (\n            henkilo.name.toLowerCase().includes(newFilter.toLowerCase())\n        )\n    })\n\n\n    henkilot = henkilot.map(henkilo => {\n        return <p key={henkilo.name.toString()}>{(henkilo.name)} {henkilo.number}  <RemoveButton henkilo={henkilo} poistaHenkilo={poistaHenkilo} /></p>\n    })\n    return (\n        <div>\n\n            <div>{henkilot}</div>\n        </div>\n    )\n}\n\nconst RemoveButton = ({ henkilo, poistaHenkilo }) => {\n    return (\n        <button onClick={() => poistaHenkilo(henkilo)}  >poista</button>\n    )\n}\n\nconst Filtteri = ({ newFilter, kasitteleFilter }) => {\n    return (\n        <form>\n            <div>\n                rajaa näytettäviä <input value={newFilter} onChange={kasitteleFilter}></input>\n            </div>\n\n        </form>\n    )\n}\n\n\nconst Lisays = ({ lisaaHenkilo, newName, kasitteleNimi, newNumber, kasitteleNumero }) => {\n    return (\n        <div>\n\n            <form onSubmit={lisaaHenkilo}>\n\n                <div>\n                    nimi: <input value={newName} onChange={kasitteleNimi} />\n                </div>\n                <div>numero: <input value={newNumber} onChange={kasitteleNumero} /></div>\n                <div>\n                    <button type=\"submit\">lisää</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\n\nconst Ilmoitus = ({ teksti }) => {\n\n    const ilmoitusTyyli = {\n        color: 'green',\n        borderSize: 2,\n        borderColor: 'green',\n        borderStyle: 'solid',\n        borderRadius: '5px',\n        backgroundColor: 'lightgrey',\n        padding: '5px',\n        fontSize: 30\n    }\n\n    if (teksti === '') {\n        return (null)\n    } else {\n        return (\n            <div style={ilmoitusTyyli} >{teksti}</div>\n        )\n    }\n\n\n}\n\nconst VirheIlmoitus = ({teksti}) =>{\n    const virheilmoitusTyyli = {\n        color: 'red',\n        borderSize: 2,\n        borderColor: 'red',\n        borderStyle: 'solid',\n        borderRadius: '5px',\n        backgroundColor: 'lightgrey',\n        padding: '5px',\n        fontSize: 30\n    }\n    if(teksti===''){\n        return(null)\n    } else {\n        return(\n            <div style={virheilmoitusTyyli}>{teksti}</div>\n        )\n    }\n    }\n    \n\nconst App = () => {\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(henkilolista => {\n                setPersons(henkilolista)\n\n            })\n\n\n    }, [])\n\n\n\n\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [newFilter, setNewFilter] = useState('')\n    const [tapahtumaViesti, setTapahtumaViesti] = useState('')\n    const [virheTeksti, setVirheTeksti] = useState('')\n\n    const lisaaHenkilo = (event) => {\n        event.preventDefault()\n\n\n        let nimi = newName\n        let numero = newNumber\n        if (persons.map(henkilo => henkilo.name.toLowerCase()).includes(nimi.toLowerCase())) {\n\n\n\n            const valinta = window.confirm(`${nimi} on jo luettelossa, korvataanko vanha numero uudella`)\n            if (valinta) {\n\n                let etsittavaHenkilo = persons.find(henkilo => {\n                    if (henkilo.name.toLowerCase() === nimi.toLowerCase()) {\n                        return henkilo\n                    }\n                })\n\n\n\n\n\n                const uusiNumero = { name: nimi, number: numero }\n\n\n                personService\n\n\n\n                    .paivitaNumero(etsittavaHenkilo.id, uusiNumero)\n                    .then(response => {\n                        setTapahtumaViesti(`Vaihdettiin henkilön ${etsittavaHenkilo.name} numero`)\n                        setTimeout(() => {\n                            setTapahtumaViesti('')\n                        }, 2000)\n\n                        setPersons(persons.map(henkilo => {\n                            if (henkilo.id !== etsittavaHenkilo.id) {\n                                return (henkilo)\n                            } else {\n                                return response\n                            }\n                        }\n\n                        ))\n                        setNewName('')\n                        setNewNumber('')\n                    })\n                    .catch(error =>{\n                        setVirheTeksti(`Henkilö ${etsittavaHenkilo.name} oli jo poistettu`)\n                        setTimeout(() => {\n                            setVirheTeksti('')\n                        }, 3000)\n                    })\n\n\n            } else {\n                return\n            }\n\n        }\n        if (!persons.map(henkilo => henkilo.name.toLowerCase()).includes(nimi.toLowerCase())) {\n            const lisattava = {\n                name: nimi,\n                number: numero\n            }\n            personService\n                .create(lisattava)\n                .then(henkilolista => {\n\n\n                    setTapahtumaViesti(`Lisättiin ${lisattava.name}`)\n                    setTimeout(() => {\n                        setTapahtumaViesti('')\n                    }, 2000)\n                    setPersons(persons.concat(henkilolista))\n                    setNewName('')\n                    setNewNumber('')\n                })\n        } else {\n\n\n        }\n    }\n\n    const poistaHenkilo = (henkilo) => {\n        const valinta = window.confirm(`Poistetaanko ${henkilo.name}`)\n        if (valinta === true) {\n            personService\n                .removePerson(henkilo.id)\n                .then(() => {\n\n\n                    setTapahtumaViesti(`Poistettiin henkilö ${henkilo.name}`)\n                    setTimeout(() => {\n                        setTapahtumaViesti('')\n                    }, 2000)\n                    personService.getAll()\n                        .then(response => {\n                            setPersons(response)\n                        })\n                })\n                \n        } else {\n            return\n        }\n\n\n    }\n\n    const kasitteleNimi = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const kasitteleNumero = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const kasitteleFilter = (event) => {\n        setNewFilter(event.target.value)\n    }\n    \n    \n\n\n\n\n    return (\n        <div>\n            <h2>Puhelinluettelo</h2>\n            <Ilmoitus teksti={tapahtumaViesti} />\n            <VirheIlmoitus teksti={virheTeksti} />\n            <Filtteri newFilter={newFilter} kasitteleFilter={kasitteleFilter} />\n            <h3>lisää uusi</h3>\n            <Lisays lisaaHenkilo={lisaaHenkilo} newName={newName} kasitteleNimi={kasitteleNimi} kasitteleNumero={kasitteleNumero} newNumber={newNumber} />\n            <h3>Numerot</h3>\n            <Henkilot persons={persons} newFilter={newFilter} setPersons={setPersons} poistaHenkilo={poistaHenkilo} />\n        </div>\n    )\n\n}\n\nexport default App\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}